import {
  Container,
  Badge,
  Link,
  List,
  ListItem,
  Heading,
  Center
} from '@chakra-ui/react'
import { ExternalLinkIcon } from '@chakra-ui/icons'
import { Title, WorkImage, Meta } from '../../components/work'
import P from '../../components/paragraph'
import Layout from '../../components/layouts/article'

const Work = () => (
  <Layout title="Shoppocles">
    <Container>
      <Title>
        RSA Implementation <Badge>December 17, 2021 - December 21, 2021 </Badge>
      </Title>
      <P>
        This project and repository contains a dummy C++ code for RSA
        Cryptosystem.
      </P>

      <Heading as="h2" fontSize={18} my={6}>
        <Center>What is RSA?</Center>
      </Heading>
      <P>
        RSA (Rivest–Shamir–Adleman) is one of the first public-key cryptosystems
        and is widely used for secure data transmission. In such a cryptosystem,
        the encryption key is public and it is different from the decryption key
        which is kept secret (private). You can read more about RSA{' '}
        <Link href="https://en.wikipedia.org/wiki/RSA_(cryptosystem)">
          here <ExternalLinkIcon mx="1px" />
        </Link>
        .
      </P>

      <Heading as="h2" fontSize={18} my={6}>
        <Center>Why Dummy Code?</Center>
      </Heading>
      <P>
        While generating the random prime numbers , I have used primes numbers
        under 100, which is not secure enough and easy to crack. Whereas in real
        implementation the prime numbers chosen are really large (about 2 pages
        long :p). Also the random numbers generated by the system are not purely
        random they are pseudo random numbers. It takes integers as input
        (message) and encrypts the message by generating two random numbers then
        performing all the operations. It also genrates a private key which is
        complement to the public key and it decrypts the ciphertext using it.
        Currently it takes a character as input and encypts it using its
        corresponding ascii value and shows the encrypted text , then it
        calculates the private key using extended eucledian algorithm and
        decrypts the encrypted text to give the original message.
      </P>

      {/* Components */}
      <List ml={4} my={4}>
        <ListItem>
          <Meta>GitHub Repository</Meta>
          <Link href="https://github.com/Democles85/RSA-Implementation">
            RSA Project
            <ExternalLinkIcon mx="2px" />
          </Link>
        </ListItem>
        <ListItem>
          <Meta>Platform</Meta>
          <span>C++</span>
        </ListItem>
        {/* <ListItem>
          <Meta>Stack</Meta>
          <span></span>
        </ListItem> */}
      </List>

      {/* Project Images */}
      <WorkImage
        src="/images/works/rsa_implementation_01.png"
        alt="Rsa Sample Output"
      />
    </Container>
  </Layout>
)

export default Work
